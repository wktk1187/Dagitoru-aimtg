// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.

// TODO(ry) It'd be better to make Deferred a class that inherits from
// Promise, rather than an interface. This is possible in ES2016, however
// typescript produces broken code when targeting ES5 code.
// See https://github.com/Microsoft/TypeScript/issues/15202
// At the time of writing, the github issue is closed but the problem remains.
export interface Deferred<T> extends Promise<T> {
  readonly state: "pending" | "fulfilled" | "rejected";
  resolve(value?: T | PromiseLike<T>): void;
  // deno-lint-ignore no-explicit-any
  reject(reason?: any): void;
}

/**
 * Creates a Promise with the `reject` and `resolve` functions placed as methods
 * on the promise object itself.
 *
 * @example
 * ```typescript
 * import { deferred } from "https://deno.land/std@$STD_VERSION/async/deferred.ts";
 *
 * const p = deferred<number>();
 * // ...
 * p.resolve(42);
 * ```
 */
export function deferred<T>(): Deferred<T> {
  let methods;
  let state = "pending";
  const promise = new Promise<T>((resolve, reject) => {
    methods = {
      async resolve(value: T | PromiseLike<T>) {
        await value;
        state = "fulfilled";
        resolve(value);
      },
      // deno-lint-ignore no-explicit-any
      reject(reason?: any) {
        state = "rejected";
        reject(reason);
      },
    };
  });
  Object.defineProperty(promise, "state", { get: () => state });
  return Object.assign(promise, methods) as Deferred<T>;
}

// denoCacheMetadata={"headers":{"age":"8770873","content-length":"1547","etag":"\"925b4ad3e318d2d8dabd24859d23066d\"","last-modified":"Mon, 06 Feb 2023 23:43:18 GMT","server":"deno/gcp-asia-southeast1","x-amz-replication-status":"COMPLETED","x-amz-version-id":"GYiWz1BQ.znqN3tCbBxasMLv_QgwK_lv","x-content-type-options":"nosniff","cross-origin-opener-policy":"same-origin","date":"Thu, 06 Feb 2025 12:09:15 GMT","x-cache":"Hit from cloudfront","cross-origin-embedder-policy":"same-origin","server-timing":"fetchSource;dur=8","x-amz-cf-id":"Ms-GMjY2kfy0YAD6s8AHro47F_DNIp2a5Nt7EEnIzCPNgLtkn8wamg==","x-frame-options":"DENY","referrer-policy":"strict-origin-when-cross-origin","accept-ranges":"bytes","cross-origin-resource-policy":"same-origin","strict-transport-security":"max-age=63072000; includeSubDomains; preload","vary":"Accept-Encoding, Origin","content-security-policy":"default-src 'none'; style-src 'unsafe-inline'; sandbox","x-amz-cf-pop":"SIN52-P1","content-type":"application/typescript; charset=utf-8","x-amz-server-side-encryption":"AES256","cache-control":"public, max-age=31536000, immutable","via":"http/2 edgeproxy-h","access-control-allow-origin":"*"},"url":"https://deno.land/std@0.177.0/async/deferred.ts","time":1747614627}